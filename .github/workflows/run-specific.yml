name: Run Minecraft
on:
    workflow_dispatch:
      inputs:
        dir:
          description: 'The directory to build in'
          required: true
          default: '1_20'
        mc:
          description: 'The Minecraft version to build'
          required: true
          default: '1.20.4'
        type:
          description: 'The type to of jar to use (lexforge, neoforge or fabric)'
          required: true
          default: 'lexforge'
        modloader:
          description: 'The modloader to install with HeadlessMc (forge, neoforge or fabric)'
          required: true
          default: 'forge'
        regex:
          description: 'Regex to match the Minecraft version to launch (forge is like 1.20.4-forge and fabric starts with fabric-1.20)'
          required: true
          default: 'fabric.*1.20.4'
        java:
          description: 'The Java version to use'
          required: true
          default: '17'

jobs:
  run:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v4
            -   uses: actions/setup-java@v4
                with:
                    java-version: ${{ github.event.inputs.java }}
                    distribution: adopt
            -   name: Grant execute permission for gradlew
                working-directory: ./${{ github.event.inputs.dir }}
                run: chmod +x gradlew
            -   name: Setup HeadlessMC directory
                run: mkdir HeadlessMC
            -   name: Configure HeadlessMC java versions
                run: echo hmc.java.versions=$JAVA_HOME/bin/java > HeadlessMC/config.properties
            -   name: Configure HeadlessMC game directory
                run: echo hmc.gamedir=$PWD/run >> HeadlessMC/config.properties
            -   name: Configure offline mode
                run: echo hmc.offline=true >> HeadlessMC/config.properties
            -   name: Configure Exceptions
                run: echo hmc.rethrow.launch.exceptions=true >> HeadlessMC/config.properties
            -   name: Configure Failing on wrong command
                run: echo hmc.exit.on.failed.command=true >> HeadlessMC/config.properties
            -   name: Configure Dummy Assets
                run: echo hmc.assets.dummy=true >> HeadlessMC/config.properties
            -   name: Get HeadlessMC
                run: wget -O headlessmc-launcher-1.9.5.jar https://github.com/3arthqu4ke/headlessmc/releases/download/1.9.5/headlessmc-launcher-1.9.5.jar
            -   name: Download ${{ github.event.inputs.mc }}
                run: java -jar headlessmc-launcher-1.9.5.jar --command download ${{ github.event.inputs.mc }}
            -   name: Download ${{ github.event.inputs.modloader }} ${{ github.event.inputs.mc }}
                run: java -jar headlessmc-launcher-1.9.5.jar --command ${{ github.event.inputs.modloader }} ${{ github.event.inputs.mc }} --java ${{ github.event.inputs.java }}
            -   name: List versions
                run: java -jar headlessmc-launcher-1.9.5.jar --command versions
            -   name: Make mods dir
                run: mkdir -p run/mods
            -   name: Configure Accessibility
                run: echo onboardAccessibility:false >> run/options.txt
            -   name: Build
                working-directory: ./${{ github.event.inputs.dir }}
                run: ./gradlew build
            -   name: Copy mod
                run: cp ${{ github.event.inputs.dir }}/build/libs/mc-runtime-test-*-${{ github.event.inputs.type }}-release.jar run/mods
            -   name: LS mods dir
                run: ls run/mods
            -   name: Run game
                run: java -jar headlessmc-launcher-1.9.5.jar --command launch ${{ github.event.inputs.regex }} -regex -lwjgl --jvm -Djava.awt.headless=true
